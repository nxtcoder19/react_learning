const { createContext, Children, useState, useContext } = require("react");

const ThemeContext = createContext({});

export const ThemeProvider = ({ children }) => {
    const [theme, setTheme] = useState("light");

    const toggleTheme = () => {
        setTheme(theme === "light" ? "dark" : "light");
    };

    return (
        <ThemeContext.Provider value={
            {
                theme,
                toggleTheme
            }
        }>
            {children}
        </ThemeContext.Provider>
    )
}

export const useTheme = () => {
    const themContext = useContext(ThemeContext);
    return themContext;
}

/*
ðŸ“Œ Definition: The useContext hook allows functional components to consume values from a 
React Context without having to pass props manually at each level (prop drilling).

âœ… Simplifies state management.
âœ… Avoids unnecessary prop drilling.
âœ… Works well with global themes, authentication, and settings.
*/